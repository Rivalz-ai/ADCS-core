name: ADCS-Core Multi-Service Pipeline

on:
  push:
    branches:
      - main
      - testnet

env:
  REPO_URL: "asia-southeast1-docker.pkg.dev/rivalz-be/adcs"
  NAMESPACE: "adcs"
  KUBECONFIG: "${{ vars.ROME_KUBECONFIG }}"

jobs:
  detect-changes:
    runs-on: rivalz-be
    outputs:
      open_changed: ${{ steps.filter.outputs.open }}
      api_changed: ${{ steps.filter.outputs.api }}
      core_changed: ${{ steps.filter.outputs.core }}
      inference_changed: ${{ steps.filter.outputs.inference }}
      adaptors_changed: ${{ steps.filter.outputs.adaptors }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            open:
              - 'open/**'
            api:
              - 'api/**'
            core:
              - 'core/**'
            inference:
              - 'inference/**'
            adaptors:
              - 'adaptors/**'

  build-and-deploy:
    needs: detect-changes
    runs-on: rivalz-be
    env:
      REPO_URL: "asia-southeast1-docker.pkg.dev/rivalz-be/adcs"
      KUBECONFIG: "${{ vars.ROME_KUBECONFIG }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref_name }}" == "testnet" ]]; then
            NAMESPACE="testnet-adcs"
          else
            NAMESPACE="adcs"
          fi
          echo "NAMESPACE=${NAMESPACE}" >> $GITHUB_ENV

      - name: Debug Outputs
        run: |
          echo "open_changed: ${{ needs.detect-changes.outputs.open_changed }}"
          echo "api_changed: ${{ needs.detect-changes.outputs.api_changed }}"
          echo "core_changed: ${{ needs.detect-changes.outputs.core_changed }}"
          echo "inference_changed: ${{ needs.detect-changes.outputs.inference_changed }}"
          echo "adaptors_changed: ${{ needs.detect-changes.outputs.adaptors_changed }}"

      - name: Build and deploy open service
        if: needs.detect-changes.outputs.open_changed == 'true'
        run: |
          export SERVICE_NAME="adcs-open"
          cd open
          commit_hash=$(git rev-parse --short $GITHUB_SHA)
          docker build -t ${REPO_URL}/${SERVICE_NAME}:${commit_hash} .
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 -d | docker login -u _json_key --password-stdin asia-southeast1-docker.pkg.dev
          docker push ${REPO_URL}/${SERVICE_NAME}:${commit_hash}
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
          
          echo "${{ vars.ROME_KUBECONFIG }}" | base64 -d >> rome_kubeconfig
          export KUBECONFIG=rome_kubeconfig
          
          kubectl set image deployment/${SERVICE_NAME} ${SERVICE_NAME}=${REPO_URL}/${SERVICE_NAME}:${commit_hash} -n ${NAMESPACE} --kubeconfig=rome_kubeconfig
          kubectl rollout status deployment/${SERVICE_NAME}

      - name: Build and deploy api service
        if: needs.detect-changes.outputs.api_changed == 'true'
        run: |
          export SERVICE_NAME="adcs-api"
          cd api
          commit_hash=$(git rev-parse --short $GITHUB_SHA)
          docker build -t ${REPO_URL}/${SERVICE_NAME}:${commit_hash} .
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 -d | docker login -u _json_key --password-stdin asia-southeast1-docker.pkg.dev
          docker push ${REPO_URL}/${SERVICE_NAME}:${commit_hash}
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
          
          echo "${{ vars.ROME_KUBECONFIG }}" | base64 -d >> rome_kubeconfig
          export KUBECONFIG=rome_kubeconfig
          
          kubectl set image deployment/${SERVICE_NAME} ${SERVICE_NAME}=${REPO_URL}/${SERVICE_NAME}:${commit_hash} -n ${NAMESPACE} --kubeconfig=rome_kubeconfig
          kubectl rollout status deployment/${SERVICE_NAME}

      - name: Build and deploy core service
        if: needs.detect-changes.outputs.core_changed == 'true'
        run: |
          export SERVICE_NAME="adcs-core"
          cd core
          commit_hash=$(git rev-parse --short $GITHUB_SHA)
          docker build -t ${REPO_URL}/${SERVICE_NAME}:${commit_hash} .
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 -d | docker login -u _json_key --password-stdin asia-southeast1-docker.pkg.dev
          docker push ${REPO_URL}/${SERVICE_NAME}:${commit_hash}
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
          
          echo "${{ vars.ROME_KUBECONFIG }}" | base64 -d >> rome_kubeconfig
          export KUBECONFIG=rome_kubeconfig
          
          kubectl set image deployment/${SERVICE_NAME} ${SERVICE_NAME}=${REPO_URL}/${SERVICE_NAME}:${commit_hash} -n ${NAMESPACE} --kubeconfig=rome_kubeconfig
          kubectl rollout status deployment/${SERVICE_NAME}

      - name: Build and deploy inference service
        if: needs.detect-changes.outputs.inference_changed == 'true'
        run: |
          export SERVICE_NAME="adcs-inference"
          cd inference
          commit_hash=$(git rev-parse --short $GITHUB_SHA)
          docker build -t ${REPO_URL}/${SERVICE_NAME}:${commit_hash} .
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 -d | docker login -u _json_key --password-stdin asia-southeast1-docker.pkg.dev
          docker push ${REPO_URL}/${SERVICE_NAME}:${commit_hash}
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
          
          echo "${{ vars.ROME_KUBECONFIG }}" | base64 -d >> rome_kubeconfig
          export KUBECONFIG=rome_kubeconfig
          
          kubectl set image deployment/${SERVICE_NAME} ${SERVICE_NAME}=${REPO_URL}/${SERVICE_NAME}:${commit_hash} -n ${NAMESPACE} --kubeconfig=rome_kubeconfig
          kubectl rollout status deployment/${SERVICE_NAME}

      - name: Build and deploy adaptors service
        if: needs.detect-changes.outputs.adaptors_changed == 'true'
        run: |
          export SERVICE_NAME="adcs-adaptors"
          cd adaptors
          commit_hash=$(git rev-parse --short $GITHUB_SHA)
          docker build -t ${REPO_URL}/${SERVICE_NAME}:${commit_hash} .
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 -d | docker login -u _json_key --password-stdin asia-southeast1-docker.pkg.dev
          docker push ${REPO_URL}/${SERVICE_NAME}:${commit_hash}
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
          
          echo "${{ vars.ROME_KUBECONFIG }}" | base64 -d >> rome_kubeconfig
          export KUBECONFIG=rome_kubeconfig
          
          kubectl set image deployment/${SERVICE_NAME} ${SERVICE_NAME}=${REPO_URL}/${SERVICE_NAME}:${commit_hash} -n ${NAMESPACE} --kubeconfig=rome_kubeconfig
          kubectl rollout status deployment/${SERVICE_NAME}
