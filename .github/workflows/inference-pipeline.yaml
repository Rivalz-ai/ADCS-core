name: ADCS INFERENCE Pipeline

on:
  push:
    branches:
      - main
      - testnet
    paths:
      - 'inference/**'
      - '.github/workflows/inference-pipeline.yaml'

# Prevent concurrent deployments
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  REPO_URL: "asia-southeast1-docker.pkg.dev/rivalz-be/adcs"
  NAMESPACE: "adcs"
  SERVICE_NAME: "adcs-inference"

jobs:
  build-and-push:
    outputs:
      commit_hash: ${{ steps.build.outputs.commit_hash }}
    runs-on: rivalz-dc
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build inference service
        id: build
        run: |
          cd inference
          commit_hash=$(git rev-parse --short HEAD)
          docker build -t ${REPO_URL}/${SERVICE_NAME}:${commit_hash} -t ${REPO_URL}/${SERVICE_NAME}:latest .
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 -d | docker login -u _json_key --password-stdin asia-southeast1-docker.pkg.dev
          docker push ${REPO_URL}/${SERVICE_NAME}:${commit_hash}
          docker push ${REPO_URL}/${SERVICE_NAME}:latest
          echo "commit_hash=${commit_hash}" >> $GITHUB_OUTPUT
          
  deploy-inference-service:
    needs: build-and-push
    runs-on: rivalz-dc
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: "Rivalz-ai/rivalz-helm-chart.git"
          path: rivalz-chart
          ref: main

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref_name }}" == "testnet" ]]; then
            echo "NAMESPACE=testnet-adcs" >> $GITHUB_ENV
          else
            echo "NAMESPACE=adcs" >> $GITHUB_ENV
          fi

      - name: Deploy inference service
        run: |
          echo "${{ vars.ROME_KUBECONFIG }}" | base64 -d >> kubeconfig
          helm upgrade --install ${SERVICE_NAME} rivalz-chart -f inference/values.yaml -n ${NAMESPACE} \
            --kubeconfig kubeconfig \
            --set image.tag=${{ needs.build-and-push.outputs.commit_hash }} \
            --create-namespace
          rm -f kubeconfig
          echo "${{ vars.DC_KUBECONFIG }}" | base64 -d >> kubeconfig
          helm upgrade --install ${SERVICE_NAME} rivalz-chart -f inference/values.yaml -n ${NAMESPACE} \
            --kubeconfig kubeconfig \
            --set image.tag=${{ needs.build-and-push.outputs.commit_hash }} \
            --create-namespace

