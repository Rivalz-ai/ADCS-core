generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Adaptor {
  name           String
  description    String
  variables      String?       @map("variables")
  createdAt      DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime      @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  id             Int           @id @default(autoincrement())
  categoryId     Int           @map("category_id")
  outputTypeId   Int           @map("output_type_id")
  jobId          String        @map("job_id")
  createdBy      String?       @map("created_by")
  iconUrl        String?       @map("icon_url")
  status         String        @default("draft") @map("status")
  chainId        Int           @default(1) @map("chain_id")
  requests       Int           @default(0) @map("requests")
  exampleCode    String?       @map("example_code")
  adaptorTypeId  Int?
  dataProviderId Int?          @map("data_provider_id")
  typeId         Int?          @map("type_id")
  aiPrompt       String?       @map("ai_prompt")
  AdaptorType    AdaptorType?  @relation(fields: [adaptorTypeId], references: [id])
  category       Category      @relation(fields: [categoryId], references: [id])
  chain          Chain         @relation(fields: [chainId], references: [id])
  DataProvider   DataProvider? @relation(fields: [dataProviderId], references: [id])
  outputType     OutputType    @relation(fields: [outputTypeId], references: [id])

  @@map("adaptor")
}

model Category {
  name      String
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  id        Int       @id @default(autoincrement())
  adaptors  Adaptor[]

  @@map("category")
}

model OutputType {
  name                 String
  createdAt            DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  id                   Int       @id @default(autoincrement())
  coordinatorAddress   String?   @map("coordinator_address")
  fulfillDataRequestFn String?   @map("fulfill_data_request_fn")
  format               String?   @map("format")
  adaptors             Adaptor[]

  @@map("output_type")
}

model Listener {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  eventName String   @map("event_name")
  chainId   Int      @map("chain_id")
  serviceId Int      @map("service_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  chain     Chain    @relation(fields: [chainId], references: [id])
  service   Service  @relation(fields: [serviceId], references: [id])

  @@map("listener")
}

model Reporter {
  id              Int      @id @default(autoincrement())
  name            String
  contractAddress String   @map("contract_address")
  address         String
  privateKey      String   @map("private_key")
  chainId         Int      @map("chain_id")
  serviceId       Int      @map("service_id")
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  chain           Chain    @relation(fields: [chainId], references: [id])
  service         Service  @relation(fields: [serviceId], references: [id])

  @@map("reporter")
}

model Chain {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  adaptors    Adaptor[]
  listeners   Listener[]
  reporters   Reporter[]

  @@map("chain")
}

model Service {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  listeners   Listener[]
  reporters   Reporter[]

  @@map("service")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String?  @unique
  password       String?
  name           String?
  walletAddress  String?  @unique @map("wallet_address")
  isAdmin        Boolean  @default(false) @map("is_admin")
  nonceTimestamp DateTime @map("nonce_timestamp") @db.Timestamptz(6)
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  nonce          Int      @default(0) @map("nonce")

  @@map("user")
}

model AdaptorType {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  adaptors  Adaptor[]

  @@map("adaptor_type")
}

model DataProvider {
  id              Int       @id @default(autoincrement())
  name            String
  endpoint        String
  apiKey          String?   @map("api_key")
  type            String
  active          Boolean   @default(true)
  description     String
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  inputVariables  Json
  outputVariables Json
  createdBy       String?   @map("created_by")
  iconUrl         String?   @map("icon_url")
  documentation   String?   @map("documentation")
  exampleCall     String?   @map("example_call")
  aiModel         String?   @map("ai_model")
  exampleBody     String?   @map("example_body")
  method          String    @default("GET")
  Adaptor         Adaptor[]

  @@map("data_provider")
}
